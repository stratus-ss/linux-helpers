
- name: Install Nvidia Open
  become: yes
  become_user: "{{ username }}"
  kewlfft.aur.aur:
    use: yay
    name:
      - nvidia-open-dkms
      - nvidia-settings
    state: present
  when:
    - desktop | bool
    - nvidia_open | bool

- name: Install Nvidia LTS
  become: yes
  become_user: "{{ username }}"
  kewlfft.aur.aur:
    use: yay
    name:
      - nvidia-lts
      - nvidia-settings
    state: present
  when:
    - desktop | bool
    - nvidia_lts | bool

- name: Install Nvidia DKMS
  become: yes
  become_user: "{{ username }}"
  kewlfft.aur.aur:
    use: yay
    name:
      - nvidia-dkms
      - nvidia-settings
    state: present
  when:
    - desktop | bool
    - nvidia_dkms | bool

- name: Install Flatpak
  become: yes
  become_user: "{{ username }}"
  kewlfft.aur.aur:
    use: yay
    name:
      - flatpak
      - flatseal
    state: present
  when:
    - desktop | bool
    - flatpak | bool

- name: Modify Faillock increasing number of failures to {{ faillock_retries }}
  lineinfile:
    path: "/etc/security/faillock.conf"
    regexp: '^# deny 6'
    line: "deny = {{ faillock_retries }}"
  when:
    - faillock_increase | bool

- name: Install Desktop packages
  become: yes
  become_user: "{{ username }}"
  kewlfft.aur.aur:
    use: yay
    name:
      - beeper
      - brscan5
      - cups
      - eog
      - evince
      - file-roller
      - firefox
      - flameshot
      - gedit
      - gnome-calculator
      - gnome-calendar
      - gnome-disk-utility
      - gnome-online-accounts-gtk
      - gvfs
      - gvfs-nfs
      - gvfs-smb
      - makemkv
      - mlocate
      - openaudible-bin
      - simple-scan
      - spideroak-one
      - steam
      - system-config-printer
      - terminator
      - ulauncher
      - virt-manager
      - xdg-user-dirs-gtk
      - yt-dlp
    state: present

- name: Ensure a/dev/sg* exists
  ansible.builtin.copy:
    dest: /etc/modules-load.d/sg.conf
    content: |
      sg
    mode: 0644

- name: Ensure {{ username }} home directory exists
  ansible.builtin.file:
    path: /home/{{ username }}
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0700'

- name: Copy bashrc
  copy:
    src: /mnt/configs/.bashrc
    dest: /home/{{ username }}/.bashrc
    remote_src: yes
    owner: "{{ username }}"
    group: "{{ username }}"

- name: update the firefox icon
  block:
    - name: Ensure /home/{{ username }}/.local/share/applications directory exists
      file:
        path: /home/{{ username }}/.local/share/applications
        state: directory
        mode: '0755'
        owner: "{{ username }}"
        group: "{{ username }}"

    - name: Ensure /home/{{ username }}/.local/share/icons directory exists
      file:
        path: "/home/{{ username }}/.local/share/icons"
        state: directory
        mode: '0755'
        owner: "{{ username }}"
        group: "{{ username }}"

    - name: Copy Firefox desktop file
      copy:
        src: /usr/share/applications/firefox.desktop
        dest: "/home/{{ username }}/.local/share/applications/firefox.desktop"
        mode: '0644'
        owner: "{{ username }}"
        group: "{{ username }}"

    - name: Copy Black Firefox icon
      copy:
        src: /mnt/icons/Black-Firefox-icon.png
        dest: "/home/{{ username }}/.local/share/icons/Black-Firefox-icon.png"
        mode: '0644'
        owner: "{{ username }}"
        group: "{{ username }}"

    - name: Modify Icon path in Firefox desktop file
      lineinfile:
        path: "/home/{{ username }}/.local/share/applications/firefox.desktop"
        regexp: '^Icon=firefox$'
        line: 'Icon=/home/{{ username }}/.local/share/icons/Black-Firefox-icon.png'
  when:
    - custom_firefox_icon | bool
- name: Restore firefox backup
  block:
    - name: fetch system firefox settings
      ansible.builtin.get_url:
        url: http://{{ remote_server }}/system_firefox.tar.gz
        dest: /home/{{ username }}/system_firefox.tar.gz
        mode: '0664'

    - name: extract system firefox settings tarball
      ansible.builtin.unarchive:
        src: /home/{{ username }}/system_firefox.tar.gz
        dest: /home/{{ username }}/
        owner: "{{ username }}"
  when:
    - restore_firefox_backup | bool

- name: Ensure mount point directories exist
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ username }}"
    group: "{{ username }}"
  loop:
    - /home/stratus/Downloads
    - /var/cache/pacman/pkg
    - /home/stratus/Documents
    - /home/stratus/OBS
    - /1TB_nvme
    - /home/stratus/Games
  when:
    - update_fstab | bool

- name: Ensure fstab entries
  ansible.builtin.lineinfile:
    path: /etc/fstab
    line: "{{ item }}"
    state: present
  loop:
    - "{{ remote_server }}:/storage/backups/desktop_mounts/stratus_Downloads   /home/stratus/Downloads  nfs  x-systemd.requires=zfs-mount.service,x-systemd.automount,x-systemd.device-timeout=10,timeo=05,nofail 0 0"
    - "{{ remote_server }}:/storage/backups/pacman_cache   /var/cache/pacman/pkg/  nfs  x-systemd.requires=zfs-mount.service,x-systemd.automount,x-systemd.device-timeout=10,timeo=05,nofail 0 0"
    - "/dev/disk/by-id/ata-SPCC_Solid_State_Disk_AA000000000000001885-part1 /home/stratus/OBS xfs x-systemd.requires=zfs-mount.service,defaults,rw,noatime,discard 0 0"
    - "/dev/disk/by-id/nvme-Samsung_SSD_970_EVO_1TB_S5H9NS0N808837D-part1 /1TB_nvme xfs  x-systemd.requires=zfs-mount.service,rw,relatime,attr2,inode64,logbufs=8,logbsize=32k,noquota,nofail,noatime        0 1"
    - "/1TB_nvme/Steam/ /home/stratus/Games/Steam none x-systemd.requires=zfs-mount.service,bind"
    - "/big_space/Steam/ /home/stratus/Games/Steam2 none x-systemd.requires=zfs-mount.service,bind"
  when:
    - update_fstab | bool

- name: Allow {{ username }} to use systemctl suspend without password
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    line: '{{ username }} ALL=(ALL) NOPASSWD: /bin/systemctl suspend'
    validate: '/usr/sbin/visudo -cf %s'
    state: present
  when:
    - sudoers_suspend_no_passwd | bool

- name: Restore user cryptography
  block:
    - name: fetch ssh/gpg keys settings
      ansible.builtin.get_url:
        url: http://{{ remote_server }}/gpg_ssh_keys.tar.gz
        dest: /tmp/
        mode: '0664'

    - name: clear out gnupg directory
      ansible.builtin.file:
        path: /home/{{ username }}/.gnupg/
        state: absent

    - name: extract gpg/ssh tarball
      ansible.builtin.unarchive:
        src: /tmp/gpg_ssh_keys.tar.gz
        dest: /home/{{ username }}/
        owner: "{{ username }}"

    - name: fetch vpn settings
      ansible.builtin.get_url:
        url: http://{{ remote_server }}/vpns.tar.gz
        dest: /tmp/
        mode: '0664'

    - name: Ensure /etc/NetworkManager/system-connections/ exists
      ansible.builtin.file:
        path: /etc/NetworkManager/system-connections/
        state: directory
        owner: root
        group: root
        mode: '0700'

    - name: extract gpg/ssh tarball
      ansible.builtin.unarchive:
        src: /tmp/vpns.tar.gz
        dest: /etc/NetworkManager/system-connections/
        owner: root
  when:
    - restore_user_cryptography | bool

- name: Update EndeavourOS mirrorlist
  copy:
    content: |
      #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      # EndeavourOS mirrorlist, ranked by eos-rankmirrors at 11/14/24 17:34:47.
      #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      Server = https://mirrors.gigenet.com/endeavouros/repo/$repo/$arch
      Server = https://mirror.moson.org/endeavouros/repo/$repo/$arch
      Server = https://repo.c48.uk/endeavouros/repo/$repo/$arch
      Server = https://mirror.alpix.eu/endeavouros/repo/$repo/$arch
      Server = https://md.mirrors.hacktegic.com/endeavouros/repo/$repo/$arch
      Server = https://ftp.belnet.be/mirror/endeavouros/repo/$repo/$arch
    dest: /etc/pacman.d/endeavouros-mirrorlist
  when:
    - enable_endeavour | bool
- name: Update pacman.conf for endeavour keyring
  blockinfile:
    path: /etc/pacman.conf
    block: |
      [endeavouros]
      SigLevel = Never
      Include = /etc/pacman.d/endeavouros-mirrorlist
  when:
    - enable_endeavour | bool
    
- name: Install EndeavourOS keyring
  pacman:
    name: endeavouros-keyring
    state: present
    update_cache: true
  when:
    - enable_endeavour | bool

- name: Add sudoers rule for eject
  community.general.sudoers:
    name: "{{ username }}_eject"
    user: "{{ username }}"
    commands: 
      - /usr/bin/eject
      - /usr/bin/eject -t
    nopassword: true
    state: present

- name: Enable systemd services
  systemd:
    name: "{{ item }}"
    enabled: yes
  loop:
    - cups

- name: Include Cinnamon tasks
  include_tasks: cinnamon.yaml
  when:
    - desktop | bool
    - desktop_name == "cinnamon"

- name: Include GNOME tasks
  include_tasks: gnome.yaml
  when:
    - desktop | bool
    - desktop_name == "gnome"

- name: Include KDE tasks
  include_tasks: kde.yaml
  when:
    - desktop | bool
    - desktop_name == "kde"

- name: Include Deepin tasks
  include_tasks: deepin.yaml
  when:
    - desktop | bool
    - desktop_name == "deepin"

