- name: Fail if device_name is not specified
  fail:
    msg: "Please specify the device_name variable (e.g., -e device_name=/dev/sda)"
  when: device_name == '/dev/xxx'

- name: Remove all lines from /etc/fstab except /boot/EFI mount
  ansible.builtin.lineinfile:
    path: /etc/fstab
    regexp: '^(?!.*\s/boot/EFI\s).*$'
    state: absent

- name: Create user
  user:
    name: "{{ username }}"
    password: "{{ user_password | password_hash('sha512') }}"
    groups: users,sys,adm,log,scanner,power,rfkill,video,storage,optical,lp,audio,wheel
    append: yes
    create_home: yes

- name: Enable wheel group in sudoers
  lineinfile:
    path: /etc/sudoers
    regexp: '^#\s*%wheel\s+ALL=\(ALL:ALL\)'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: '/usr/sbin/visudo -cf %s'
    firstmatch: yes

- name: Generate locale
  command: locale-gen

- name: Set locale
  copy:
    content: "LANG=en_US.UTF-8"
    dest: /etc/locale.conf

- name: Set environment variable
  shell: export LANG=en_US.UTF-8

- name: Mount NFS share
  mount:
    path: /var/cache/pacman/pkg
    src: "{{ nfs_path }}"
    fstype: nfs
    state: mounted
    opts: nfsvers=3
  when:
    - network_pacman_cache | bool
    
- name: Using older version of Pacman
  block:
    - name: Copy pacman package
      copy:
        src: /var/cache/pacman/pkg/pacman-6.1.0.33-x86_64.pkg.tar.zst
        dest: /tmp/
        remote_src: yes

    - name: Unmount NFS share
      mount:
        path: /var/cache/pacman/pkg
        state: unmounted

    - name: Install pacman package
      command: pacman -U /tmp/pacman-6.1.0.33-x86_64.pkg.tar.zst --noconfirm

    - name: Remount NFS share
      mount:
        path: /var/cache/pacman/pkg
        src: "{{ nfs_path }}"
        fstype: nfs
        state: mounted
  when: 
    - network_pacman_cache | bool
    - old_pacman_version | default(false) |bool

- name: Update makepkg.conf
  lineinfile:
    path: /etc/makepkg.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: '^RUSTFLAGS=', line: 'RUSTFLAGS="-C opt-level=2 -C target-cpu=native"' }
    - { regexp: '^MAKEFLAGS=', line: 'MAKEFLAGS="-j$(nproc)"' }
    - { regexp: '^COMPRESSZST=', line: 'COMPRESSZST=(zstd -c -z -q --threads=0 -)' }
    - { regexp: '^COMPRESSXZ=', line: 'COMPRESSXZ=(xz -c -z --threads=0 -)' }
    - { regexp: '^#?PKGDEST=', line: 'PKGDEST=/var/cache/pacman/pkg' }

- name: Install system default packages 
  pacman:
    name:
      - base-devel
      - ethtool
      - git
      - inxi
      - less
      - linux-firmware
      - linux-lts
      - networkmanager
      - openssh
      - rsync
      - sudo
      - terminator
      - wget
    state: present
    update_cache: true

- name: Ensure correct ownership of user's home directory
  ansible.builtin.file:
    path: "/home/{{ username }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    recurse: yes

- name: Clone yay repository
  git:
    repo: https://aur.archlinux.org/yay-git.git
    dest: /home/{{ username }}/yay
  become: true
  become_user: "{{ username }}"

- name: Build and install yay
  command: makepkg -si --noconfirm
  args:
    chdir: /home/{{ username }}/yay
  become: true
  become_user: "{{ username }}"

- name: Set timezone
  file:
    src: /usr/share/zoneinfo/America/Chicago
    dest: /etc/localtime
    state: link
    force: yes

- name: Generate en_US Locale
  community.general.locale_gen:
    name: "{{ item }}"
    state: present
  loop:
    - "en_US.UTF-8"

- name: start zfs install
  include_tasks: install-zfs.yaml

- name: install virtualization
  pacman:
    name:
      - libvirt
      - qemu-full
      - dnsmasq
    state: present
  when: libvirt | bool

- name: Enable libvirt services
  systemd:
    name: libvirtd
    enabled: yes
  when: libvirt | bool

- name: Add virtualization groups
  user:
    name: "{{ username }}"
    groups: users,sys,adm,log,scanner,power,rfkill,video,storage,optical,lp,audio,wheel,libvirt,libvirt-qemu,kvm
  when: libvirt | bool

- name: Install DE independent packages
  include_tasks: desktop.yaml
  when:
    - desktop | bool

- name: Unmount NFS share final
  mount:
    path: /var/cache/pacman/pkg
    state: unmounted
  when:
    - network_pacman_cache | bool
    
- name: Require wheel password in sudoers
  lineinfile:
    path: /etc/sudoers
    regexp: '^%wheel\s+ALL=\(ALL\)\s+NOPASSWD:\s+ALL'
    line: '%wheel ALL=(ALL:ALL) ALL'

- name: Add sudoers rule for systemctl suspend
  community.general.sudoers:
    name: "{{ username }}_suspend"
    user: "{{ username }}"
    commands: 
      - /bin/systemctl suspend
    nopassword: true
    state: present

- name: Add sudoers rule for zfs snapshots
  community.general.sudoers:
    name: "{{ username }}_zfs_snapshots"
    user: "{{ username }}"
    commands: 
      - /usr/bin/zfs list -t snapshot
    nopassword: true
    state: present

- name: Set Storage to persistent in journald.conf
  ansible.builtin.lineinfile:
    path: /etc/systemd/journald.conf
    regexp: '^#?Storage='
    line: 'Storage=persistent'
  when: 
    - journald_on_zfs | bool
- name: Create systemd override directory for journald
  ansible.builtin.file:
    path: /etc/systemd/system/systemd-journald.service.d
    state: directory
    mode: '0755'
  when: 
    - journald_on_zfs | bool
- name: Create override file for journald
  ansible.builtin.copy:
    dest: /etc/systemd/system/systemd-journald.service.d/override.conf
    content: |
      [Unit]
      After=zfs-mount.service
    mode: '0644'
  when: 
    - journald_on_zfs | bool

