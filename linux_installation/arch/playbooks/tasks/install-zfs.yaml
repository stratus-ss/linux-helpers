

- name: Ensure [core-testing] section and Include line are uncommented in pacman.conf
  ansible.builtin.blockinfile:
    path: /etc/pacman.conf
    block: |
      [core-testing]
      Include = /etc/pacman.d/mirrorlist
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR CORE-TESTING"
    insertbefore: '^\[core\]'

- name: Install ZFS packages
  become: yes
  become_user: "{{ username }}"
  kewlfft.aur.aur:
    use: yay
    name:
      - efibootmgr
      - sanoid
      - zfs-linux-lts
      - zfsbootmenu
    state: present
    update_cache: true

- name: Comment out [core-testing] section in pacman.conf
  ansible.builtin.blockinfile:
    path: /etc/pacman.conf
    block: |
      #[core-testing]
      #Include = /etc/pacman.d/mirrorlist
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR CORE-TESTING"
    insertbefore: '^\[core\]'

- name: Ensure sanoid config is in place
  copy:
    src: /mnt/configs/sanoid.conf
    dest: "/etc/sanoid/sanoid.conf"
    mode: '0644'

- name: Enable systemd services
  systemd:
    name: "{{ item }}"
    enabled: yes
  loop:
    - NetworkManager
    - sanoid.timer
    - sshd
    - zfs-import-cache
    - zfs-import.target
    - zfs-mount
    - zfs-share
    - zfs.target
    - zfs-zed
    
- name: Configure ZFSBootMenu
  copy:
    content: |
      Global:
        ManageImages: true
        BootMountPoint: /boot/EFI
        DracutConfDir: /etc/zfsbootmenu/dracut.conf.d
        PreHooksDir: /etc/zfsbootmenu/generate-zbm.pre.d
        PostHooksDir: /etc/zfsbootmenu/generate-zbm.post.d
        InitCPIOConfig: /etc/zfsbootmenu/mkinitcpio.conf
        InitCPIO: true
      Components:
        ImageDir: /boot/EFI/EFI/zbm
        Versions: 3
        Enabled: false
        syslinux:
          Config: /boot/syslinux/syslinux.cfg
          Enabled: false
      EFI:
        ImageDir: /boot/EFI/EFI/zbm
        Versions: false
        Enabled: true
      Kernel:
        CommandLine: ro quiet loglevel=0
    dest: /etc/zfsbootmenu/config.yaml

- name: Generate ZFSBootMenu
  command: generate-zbm

- name: Set ZFS property
  command: zfs set org.zfsbootmenu:commandline="rw" zroot/ROOT

- name: Ensure there is no hostid
  file:
    path: /etc/hostid
    state: absent

- name: Update mkinitcpio.conf
  lineinfile:
    path: /etc/mkinitcpio.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: '^MODULES=', line: 'MODULES=(zfs)' }
    - { regexp: '^HOOKS=', line: 'HOOKS=(base udev autodetect microcode modconf kms keyboard keymap consolefont block zfs filesystems)' }

- name: Generate host ID
  shell: zgenhostid $(hostid)

- name: Regenerate initramfs
  command: mkinitcpio -P


- name: Update IgnorePkg line in pacman.conf
  lineinfile:
    path: /etc/pacman.conf
    regexp: '^#?IgnorePkg.*'
    line: 'IgnorePkg   = pacman linux-lts linux-lts-headers nvidia-lts zfs-linux-lts openssh'
    state: present

