apiVersion: v1
baseDomain: {{ BASE_DOMAIN }}
compute:
- hyperthreading: Enabled
  name: worker
  replicas: {{ NUMBER_OF_WORKER_VMS }}
controlPlane:
  hyperthreading: Enabled
  name: master
  replicas: {{ NUMBER_OF_MASTER_VMS }}
metadata:
  name: {{ CLUSTER_NAME }}
 
networking:
  clusterNetwork:
  - cidr: {{ CLUSTER_NETWORK }}
    hostPrefix: 23
  machineNetwork:
  - cidr: {{ MACHINE_NETWORK }}
  networkType: OVNKubernetes
  serviceNetwork:
  - {{SERVICE_NETWORK }}
 
platform:
  baremetal:
    apiVIPs:
      - {{ API_VIP }}
    ingressVIPs:
      - {{ APP_VIP }}
    provisioningNetwork: Disabled
    externalBridge: {{ NETWORK_BRIDGE }}
    bootstrapExternalStaticIP: {{ BOOTSTRAP_STATIC_IP }}
    bootstrapExternalStaticGateway: {{ BOOTSTRAP_GW }}
    bootstrapExternalStaticDNS: {{ BOOTSTRAP_DNS }}
    hosts:
    
{% for host in openshift_cluster_provision_params %}
      - name: {{ host.openshift_node_fqdn }}
        role: {{ 'master' if host.openshift_control_node else 'worker' }}
        bmc:
            address: "redfish-virtualmedia+http://{{ host.openshift_node_bmc.address }}:8000/redfish/v1/Systems/{{ lookup('vars', (host.openshift_node_fqdn | replace('-','_')) + '_uuid' ) }}"
            username: {{ host.openshift_node_bmc.username }}
            password: {{ host.openshift_node_bmc.password }}
        bootMACAddress: {{ host.openshift_node_mac_address }}
        bootMode: {{ host.bootMode }}
        rootDeviceHints:
          deviceName: {{ host.openshift_node_install_device }}
        networkConfig:
          dns-resolver:
            config:
              server:
{% for ns in host.openshift_node_nameservers %}
                - {{ ns }}
{% endfor %}
          interfaces:
{% if vlans.enabled %}
            - name: {{ vlans.bond_name }}
              state: up
              type: bond
              mtu: {{ vlans.mtu }}
              ipv4:
                enabled: false
              link-aggregation:
                mode: {{ vlans.bond_mode }}
                options:
                  miimon: '100'
                port:
{% for interface in vlans.bond_ports %}
                - {{ interface }}
{% endfor %}
            - name: {{ vlans.bond_name }}.{{ vlans.machine_vlan_id }}
              type: vlan
              state: up
              ipv4:
                enabled: true
                address:
                - ip: {{ host.openshift_node_machine_ip_address }}
                  prefix-length: {{ host.openshift_node_cidr }}
              vlan:
                base-iface: {{ vlans.bond_name }}
                id: {{ vlans.machine_vlan_id }}
{% else %}
            - name: {{ host.openshift_node_primary_nic }}
              state: up
              type: ethernet
              ipv4:
                dhcp: false
                enabled: true
                address: 
                  - ip: {{ host.openshift_node_machine_ip_address }}
                    prefix-length: {{ host.openshift_node_cidr }}
{% endif %}
              ipv6:
                enabled: false
          routes:
            config:
              - destination: 0.0.0.0/0
                next-hop-address: {{ host.openshift_node_gateway }}
{% if vlans.enabled %}
                next-hop-interface: {{ vlans.bond_name }}.{{ vlans.machine_vlan_id }}
{% else %}
                next-hop-interface: {{ host.openshift_node_primary_nic }}
{% endif %}
{% endfor %} 
proxy:
  httpsProxy: {{ HTTPS_PROXY }}
  httpProxy: {{ HTTP_PROXY }}
  noProxy: {{ NO_PROXY }}
 
{% if additional_trust_bundle is defined and additional_trust_bundle |length > 0 %}
additionalTrustBundle: |
{{ additional_trust_bundle | indent(4)}}
{% else %}
additionalTrustBundle: ''
{%endif %}
 
pullSecret: '{{ PULL_SECRET }}'
 
sshKey: '{{ SSH_KEY }}'
