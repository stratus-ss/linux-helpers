- name: register control plane info
  community.libvirt.virt:
    command: get_interfaces
    name: "{{ vm_name }}"
  register: control_plane_info
  loop: "{{ CONTROL_PLANE_NAMES }}"
  loop_control:
    loop_var: vm_name

- name: register worker plane info
  community.libvirt.virt:
    command: get_interfaces
    name: "{{ vm_name }}"
  register: worker_info
  loop: "{{ WORKER_NAMES }}"
  loop_control:
    loop_var: vm_name
  when: 
    - WORKER_NAMES is defined
    - NUMBER_OF_WORKER_VMS !=0

- name: show variable
  debug:
    msg: "{{ OPENSHIFT_CLUSTER_PROVISION_PARAMS }}"
  when: DEBUG is defined and DEBUG | bool

- name: Create dictionary for control plane MAC addresses keyed by vm_name
  ansible.builtin.set_fact:
    control_plane_macs: "{{ dict(CONTROL_PLANE_NAMES | zip(control_plane_info.results | map(attribute='network_interfaces'))) }}"

- name: Create dictionary for worker MAC addresses keyed by vm_name
  ansible.builtin.set_fact:
    worker_macs: "{{ dict(WORKER_NAMES | zip(worker_info.results | map(attribute='network_interfaces'))) }}"
  when: 
    - WORKER_NAMES is defined
    - NUMBER_OF_WORKER_VMS !=0

- name: debug macs
  debug:
    msg: "{{ worker_macs  }}"
  when: 
    - WORKER_NAMES is defined
    - NUMBER_OF_WORKER_VMS !=0  

- name: Build updated list
  ansible.builtin.set_fact:
    updated_list: "{{ updated_list|default([]) + [ merged_item ] }}"
  loop: "{{ OPENSHIFT_CLUSTER_PROVISION_PARAMS }}"
  loop_control:
    label: "{{ item.openshift_node_fqdn }}"
  vars:
    merged_item: >-
      {{
        item | combine({
          'openshift_node_mac_address':
            (
              control_plane_macs[item.openshift_node_fqdn][control_plane_macs[item.openshift_node_fqdn].keys()|list|first].mac
              if item.openshift_control_node
              else (
                worker_macs[item.openshift_node_fqdn][worker_macs[item.openshift_node_fqdn].keys()|list|first].mac
                if (WORKER_NAMES is defined and NUMBER_OF_WORKER_VMS != 0)
                else omit
              )
            )
        })
      }}
  when: >-
    item.openshift_control_node or
    (WORKER_NAMES is defined and NUMBER_OF_WORKER_VMS != 0)



- name: Update the original data structure
  ansible.builtin.set_fact:
    OPENSHIFT_CLUSTER_PROVISION_PARAMS: "{{ updated_list }}"
