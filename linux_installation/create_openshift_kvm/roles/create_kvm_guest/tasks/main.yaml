---
- name: Create VM XML definition
  template:
    src: vm_template.xml.j2
    dest: "/tmp/{{ vm_name }}.xml"

- name: Read VM XML definition
  ansible.builtin.slurp:
    src: "/tmp/{{ vm_name }}.xml"
  register: vm_xml_content

# - name: Define VM
#   community.libvirt.virt:
#     command: define
#     xml: "{{ lookup('file', '/tmp/' + vm_name + '.xml') }}"
#     uri: qemu:///system

- name: Define VM
  community.libvirt.virt:
    command: define
    xml: "{{ vm_xml_content.content | b64decode }}"
    uri: qemu:///system

- name: register vm info
  community.libvirt.virt:
    command: get_interfaces
    name: "{{ vm_name }}"
  register: vminfo

- name: Create the disk image file
  ansible.builtin.command: "qemu-img create -f qcow2 {{ LIBVIRT_DISK_PATH }}/{{ vm_name }}.qcow2 {{ LIBVIRT_DISK_SIZE }}G"

- name: Set proper permissions on disk image
  ansible.builtin.file:
    path: "{{ LIBVIRT_DISK_PATH }}/{{ vm_name }}.qcow2"
    owner: qemu
    group: qemu
    mode: '0660'

- name: Refresh the storage pool
  community.libvirt.virt_pool:
      command: refresh
      name: "{{ LIBVERT_POOL_NAME }}"

- name: Set interface and mac address facts for vm
  set_fact:
    "{{ vm_name | replace('-','_') }}_interfaces": "{{ vminfo.network_interfaces }}"
  
