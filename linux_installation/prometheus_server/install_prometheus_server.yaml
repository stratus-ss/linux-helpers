---
- name: Deploy Prometheus Container
  hosts: "{{ prometheus_host }}"
  become: true
  vars_files:
    - vars.yaml

  tasks:
    - name: Create Prometheus directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ prometheus_dir }}"
        - "{{ prometheus_data_dir }}"

    - name: Set ownership of Prometheus data directory for container access
      file:
        path: "{{ prometheus_data_dir }}"
        owner: '65534'
        group: '65534'
        mode: '0755'
        recurse: yes
    
    - name: Create initial Prometheus configuration from template
      template:
        src: prometheus.yaml.j2
        dest: "{{ prometheus_dir }}/prometheus.yaml"
        mode: '0644'

    - name: Set SELinux context for Prometheus data directory
      community.general.sefcontext:
        target: '{{ prometheus_data_dir }}(/.*)?'
        setype: container_file_t
        state: present

    - name: Apply SELinux context to Prometheus data directory
      command: restorecon -Rv {{ prometheus_data_dir }}


    - name: Create Docker Compose file
      copy:
        dest: "{{ prometheus_dir }}/docker-compose.yaml"
        mode: '0644'
        content: |
          version: '3.8'
          
          services:
            prometheus:
              image: {{ prometheus_image | default('prom/prometheus:latest') }}
              container_name: prometheus
              restart: {{ prometheus_restart_policy | default('unless-stopped') }}
              volumes:
                - {{ prometheus_dir }}/prometheus.yaml:/etc/prometheus/prometheus.yaml
                - {{ prometheus_data_dir }}:/prometheus
              command:
                - '--config.file=/etc/prometheus/prometheus.yaml'
                - '--storage.tsdb.path=/prometheus'
                - '--web.console.libraries=/usr/share/prometheus/console_libraries'
                - '--web.console.templates=/usr/share/prometheus/consoles'
                - '--web.enable-lifecycle'
              ports:
                - "{{ prometheus_host_port }}:9090"
              user: "{{ prometheus_user_id | default('65534:65534') }}"
          
          volumes:
            prometheus_data:
              driver: local

    - name: Configure firewall for Prometheus
      firewalld:
        port: "{{ prometheus_firewall_port | default(9090) }}/tcp"
        permanent: yes
        state: enabled
        immediate: yes
      when: configure_firewall | default(true)

    - name: Check if prometheus container is running
      command: docker ps -q -f name=prometheus
      register: container_status
      changed_when: false
    
    - name: Stop Prometheus container
      shell: docker compose -f "{{ prometheus_dir }}/docker-compose.yaml" down
      when: container_status.stdout != ""

    - name: Backup existing prometheus config if it exists
      ansible.builtin.copy:
        src: "{{ prometheus_dir }}/prometheus.yaml"
        dest: "{{ prometheus_dir }}/prometheus.yaml.{{ '%Y%m%d' | strftime }}"
        remote_src: yes
        backup: yes
      ignore_errors: yes
      when: backup_existing_config | default(true)

    - name: Update Prometheus configuration from template
      template:
        src: prometheus.yaml.j2
        dest: "{{ prometheus_dir }}/prometheus.yaml"
        mode: '0644'

    - name: Start Prometheus container
      shell: docker compose -f "{{ prometheus_dir }}/docker-compose.yaml" up -d

    - name: Verify container is running
      ansible.builtin.wait_for:
        port: 9090
        timeout: 30

